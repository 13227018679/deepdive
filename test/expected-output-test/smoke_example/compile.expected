deepdive.schema.variables {
smoke.label: Boolean
cancer.label: Boolean

}

deepdive.extraction.extractors.ext_smoke {
sql: """
SELECT R0.person_id AS column_0
     , R0.smokes AS column_1
FROM person_smokes R0
"""
input_relations: [
  person_smokes
]
style: sql_extractor
output_relation: smoke
materialize: false

}

deepdive.extraction.extractors.ext_cancer {
sql: """
SELECT R0.person_id AS column_0
     , R0.has_cancer AS column_1
FROM person_has_cancer R0
"""
input_relations: [
  person_has_cancer
]
style: sql_extractor
output_relation: cancer
materialize: false

}

deepdive.inference.factors.inf_imply_smoke_cancer {
input_query: """
SELECT R0.id AS "smoke.R0.id"
     , R1.id AS "cancer.R1.id"
FROM smoke R0
   , cancer R1
   , person_smokes R2
WHERE R1.person_id = R0.person_id
  AND R2.person_id = R0.person_id
"""
function: """Imply(smoke.R0.label, cancer.R1.label)"""
weight: """0.5"""
input_relations: [
  smoke
  cancer
  person_smokes
]

}

deepdive.inference.factors.inf_imply_smoke_smoke {
input_query: """
SELECT R0.id AS "smoke.R0.id"
     , R1.id AS "smoke.R1.id"
FROM smoke R0
   , smoke R1
   , friends R2
WHERE R2.person_id = R0.person_id
  AND R2.friend_id = R1.person_id
"""
function: """Imply(smoke.R0.label, smoke.R1.label)"""
weight: """0.4"""
input_relations: [
  smoke
  friends
]

}

deepdive.pipeline.run: ${PIPELINE}

deepdive.pipeline.pipelines.extraction: [
  ext_smoke
  ext_cancer
]

deepdive.pipeline.pipelines.inference: [
  inf_imply_smoke_cancer
  inf_imply_smoke_smoke
]

deepdive.pipeline.pipelines.endtoend: [
  ext_smoke
  ext_cancer
  inf_imply_smoke_cancer
  inf_imply_smoke_smoke
]

