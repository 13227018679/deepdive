deepdive.schema.variables {
VQ.dd_label: Boolean
TQ.dd_label: Boolean

}

deepdive.extraction.extractors.ext_V {
sql: """
SELECT R0.x AS column_0
FROM D R0
"""
input_relations: [
  D
]
style: sql_extractor
output_relation: V
materialize: false

}

deepdive.extraction.extractors.ext_VQ {
sql: """
SELECT R0.x AS column_0
     , true AS column_1
FROM D R0
"""
input_relations: [
  D
]
style: sql_extractor
output_relation: VQ
materialize: false

}

deepdive.extraction.extractors.ext_T {
sql: """
SELECT R0.x AS column_0
FROM D R0
"""
input_relations: [
  D
]
style: sql_extractor
output_relation: T
materialize: true

}

deepdive.extraction.extractors.ext_TQ {
sql: """
SELECT R0.x AS column_0
     , 
CASE WHEN length(R0.x) > 5 THEN true
     ELSE NULL
END AS column_1
FROM D R0
"""
input_relations: [
  D
]
style: sql_extractor
output_relation: TQ
materialize: true

}

deepdive.pipeline.run: ${PIPELINE}

deepdive.pipeline.pipelines.extraction: [
  ext_V
  ext_VQ
  ext_T
  ext_TQ
]

deepdive.pipeline.pipelines.endtoend: [
  ext_V
  ext_VQ
  ext_T
  ext_TQ
]

