deepdive.schema.variables {
q1.dd_label: Boolean
q2.dd_label: Boolean

}

deepdive.extraction.extractors.ext_q1 {
sql: """
SELECT R0.wid AS column_0
     , R0.val AS column_1
FROM label1 R0
"""
input_relations: [
  label1
]
style: sql_extractor
output_relation: q1
materialize: false

}

deepdive.extraction.extractors.ext_q2 {
sql: """
SELECT R0.wid AS column_0
     , R0.val AS column_1
FROM label2 R0
"""
input_relations: [
  label2
]
style: sql_extractor
output_relation: q2
materialize: false

}

deepdive.inference.factors.inf_istrue_q1 {
input_query: """
SELECT dd_id_0.dd_id AS "q1.R0.dd_id"
     , R0.wid AS "q1.R0.wid"
     , R1.feature_id AS "dd_weight_column_0"
FROM q1 R0
   , features R1
   , dd_variables_q1 AS dd_id_0
WHERE R1.word_id = R0.wid
  AND R0.wid = dd_id_0.wid
"""
function: """Imply(q1.R0.dd_label)"""
weight: """?(dd_weight_column_0)"""
input_relations: [
  q1
  features
]

}

deepdive.inference.factors.inf_istrue_q2 {
input_query: """
SELECT dd_id_0.dd_id AS "q2.R0.dd_id"
     , R0.wid AS "q2.R0.wid"
     , R1.feature_id AS "dd_weight_column_0"
FROM q2 R0
   , features R1
   , dd_variables_q2 AS dd_id_0
WHERE R1.word_id = R0.wid
  AND R0.wid = dd_id_0.wid
"""
function: """Imply(q2.R0.dd_label)"""
weight: """?(dd_weight_column_0)"""
input_relations: [
  q2
  features
]

}

deepdive.pipeline.run: ${PIPELINE}

deepdive.pipeline.pipelines.extraction: [
  ext_q1
  ext_q2
]

deepdive.pipeline.pipelines.inference: [
  inf_istrue_q1
  inf_istrue_q2
]

deepdive.pipeline.pipelines.endtoend: [
  ext_q1
  ext_q2
  inf_istrue_q1
  inf_istrue_q2
]

