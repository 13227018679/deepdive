#!/usr/bin/env bash
# deepdive-do -- Runs necessary processes to get something done
# > deepdive do TARGET...
##
set -euo pipefail

: ${DEEPDIVE_PLAN_EDIT:=true} ${VISUAL:=${EDITOR:=vi}}
: ${DEEPDIVE_PROGRESS_FD:=3}  # file descriptor to pass stderr down to our show_progress(1) command

targets="$*"
. resolve-args-to-do.sh
cd "$DEEPDIVE_APP"/run

if deepdive-done "$@"; then
    echo "All done at $(format_timestamp $(ls -t "$@" | head -1)):"
    echo " $targets"
    echo "To see more details, use: deepdive plan"
    echo "To redo them anyway, use: deepdive redo"
    exit 0
fi

# load drivers configured for this application
. load-db-driver.sh
. load-compute-driver.sh

# create a directory for running
runDir=$(date +%Y%m%d/%H%M%S.%N)
mkdir -p "$runDir"
# make sure we clean up
cleanup() {
    cd "$DEEPDIVE_APP"/run
    [[ ! RUNNING -ef "$runDir" ]] || rm -f RUNNING
}
abort() {
    cd "$DEEPDIVE_APP"
    [[ ! -e run/"$runDir" ]] || ln -sfnv "$runDir" run/ABORTED
}
trap cleanup EXIT
trap abort ERR
ln -sfnv "$runDir" RUNNING

{
    # some metadata
    echo "# on $HOSTNAME: deepdive do $targets"
    echo "# run/$runDir/plan.sh"
    # and the plan
    deepdive-plan "$@"
} |
tee "$runDir"/plan.orig.sh >"$runDir"/plan.sh

# provide a chance to edit plan in a tty unless told not to ask
if [[ -t 0 && -t 1 && $EDITOR != true && $EDITOR != : && $DEEPDIVE_PLAN_EDIT ]]; then
    $VISUAL "$runDir"/plan.sh &&
    [[ "$runDir"/plan.sh -nt "$runDir"/plan.orig.sh ]] || {
        cleanup
        rm -rf "$runDir"
        error "Canceled execution"
    }
fi

# remove original unless modified
! diff -q "$runDir"/plan{,.orig}.sh || rm -f "$runDir"/plan.orig.sh

# run it
DEEPDIVE_ERROR_PREFIX="[ERROR] "  # prefixing error messages in logs
DEEPDIVE_APP=$(cd .. && pwd -P)
APP_HOME=$DEEPDIVE_APP # XXX legacy
export DEEPDIVE_ERROR_PREFIX DEEPDIVE_PROGRESS_FD DEEPDIVE_APP APP_HOME
eval 'bash -veu "$runDir"/plan.sh '$DEEPDIVE_PROGRESS_FD'>&2 2>&1' |
{
ln -sfn run.log "$runDir"/log.txt # XXX for backward compatibility with pre-0.7.x, keep a symlink
# keep a log with timestamps on each line
logging-with-ts "$runDir"/run.log
}

# leave a symlink to the latest successful run
cd "$DEEPDIVE_APP"
ln -sfnv "$runDir" run/LATEST
