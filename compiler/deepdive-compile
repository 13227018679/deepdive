#!/usr/bin/env bash
# deepdive-compile -- Compiles DeepDive source code into executables under run/
##
# Author: Jaeho Shin <netj@cs.stanford.edu>
# Created: 2015-11-03
set -eu

DEEPDIVE_APP=$(find-deepdive-app)
export DEEPDIVE_APP
cd "$DEEPDIVE_APP"
. load-db-driver.sh

STEP() { echo >&2 "$@"; }

## compile a full deepdive.conf from source code
STEP "Compiling run/compiled.deepdive.conf"
mkdir -p run
touch run/compiled.deepdive.conf
{
# compile DDlog rules
if [[ -r app.ddlog ]]; then
    ddlog compile app.ddlog
fi
# append user's deepdive.conf
if [[ -r deepdive.conf ]]; then
    cat deepdive.conf
fi
} >run/compiled.deepdive.conf
cd run

## validate/normalize the full deepdive.conf
# TODO validate deepdive.conf
STEP "Normalizing run/compiled.config.json"
# produce a JSON from compiled deepdive.conf
# XXX some bogus variables in deepdive.conf added by DDlog compiler or in deepdive-default.conf
APP_HOME='"$DEEPDIVE_APP"'
PIPELINE=
PARALLELISM=1
INPUT_BATCH_SIZE=100000
export APP_HOME PIPELINE PARALLELISM INPUT_BATCH_SIZE
hocon2json \
    compiled.deepdive.conf \
    "$DEEPDIVE_HOME"/etc/deepdive-default.conf \
    >compiled.deepdive.conf.json
# normalize config JSON
configNormalized <compiled.deepdive.conf.json >compiled.config.json

STEP "Analyzing dependencies to generate run/Makefile"
# derive a dependency graph from the extractors, factors, pipelines defined in deepdive.conf
config2dependencies <compiled.config.json >compiled.dependencies.json
# compile a Makefile from the dependency graph
dependencies2make <compiled.dependencies.json >Makefile

STEP "Compiling executable extractors and factor grounding instructions"
# compile extractors and factors under process/ and factor/
config2compilation-plan <compiled.config.json >compiled.compilation-plan.sh
bash -eu ./compiled.compilation-plan.sh
