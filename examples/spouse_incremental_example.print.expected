articles(article_id text,
         text text,
         dd_count int).

dd_delta_articles(article_id text,
                  text text,
                  dd_count int).

dd_new_articles(article_id text,
                text text,
                dd_count int).

dd_new_articles(article_id, text, dd_count) :-
    articles(article_id, text, dd_count).

dd_new_articles(article_id, text, dd_count) :-
    dd_delta_articles(article_id, text, dd_count).

sentences(document_id text,
          sentence text,
          words text[],
          lemma text[],
          pos_tags text[],
          dependencies text[],
          ner_tags text[],
          sentence_offset int,
          sentence_id text,
          dd_count int).

dd_delta_sentences(document_id text,
                   sentence text,
                   words text[],
                   lemma text[],
                   pos_tags text[],
                   dependencies text[],
                   ner_tags text[],
                   sentence_offset int,
                   sentence_id text,
                   dd_count int).

dd_new_sentences(document_id text,
                 sentence text,
                 words text[],
                 lemma text[],
                 pos_tags text[],
                 dependencies text[],
                 ner_tags text[],
                 sentence_offset int,
                 sentence_id text,
                 dd_count int).

dd_new_sentences(document_id, sentence, words, lemma, pos_tags, dependencies, ner_tags, sentence_offset, sentence_id, dd_count) :-
    sentences(document_id, sentence, words, lemma, pos_tags, dependencies, ner_tags, sentence_offset, sentence_id, dd_count).

dd_new_sentences(document_id, sentence, words, lemma, pos_tags, dependencies, ner_tags, sentence_offset, sentence_id, dd_count) :-
    dd_delta_sentences(document_id, sentence, words, lemma, pos_tags, dependencies, ner_tags, sentence_offset, sentence_id, dd_count).

people_mentions(sentence_id text,
                start_position int,
                length int,
                text text,
                mention_id text,
                dd_count int).

dd_delta_people_mentions(sentence_id text,
                         start_position int,
                         length int,
                         text text,
                         mention_id text,
                         dd_count int).

dd_new_people_mentions(sentence_id text,
                       start_position int,
                       length int,
                       text text,
                       mention_id text,
                       dd_count int).

dd_new_people_mentions(sentence_id, start_position, length, text, mention_id, dd_count) :-
    people_mentions(sentence_id, start_position, length, text, mention_id, dd_count).

dd_new_people_mentions(sentence_id, start_position, length, text, mention_id, dd_count) :-
    dd_delta_people_mentions(sentence_id, start_position, length, text, mention_id, dd_count).

has_spouse_candidates(person1_id text,
                      person2_id text,
                      sentence_id text,
                      description text,
                      relation_id text,
                      is_true boolean,
                      dd_count int).

dd_delta_has_spouse_candidates(person1_id text,
                               person2_id text,
                               sentence_id text,
                               description text,
                               relation_id text,
                               is_true boolean,
                               dd_count int).

dd_new_has_spouse_candidates(person1_id text,
                             person2_id text,
                             sentence_id text,
                             description text,
                             relation_id text,
                             is_true boolean,
                             dd_count int).

dd_new_has_spouse_candidates(person1_id, person2_id, sentence_id, description, relation_id, is_true, dd_count) :-
    has_spouse_candidates(person1_id, person2_id, sentence_id, description, relation_id, is_true, dd_count).

dd_new_has_spouse_candidates(person1_id, person2_id, sentence_id, description, relation_id, is_true, dd_count) :-
    dd_delta_has_spouse_candidates(person1_id, person2_id, sentence_id, description, relation_id, is_true, dd_count).

has_spouse_features(relation_id text,
                    feature text,
                    dd_count int).

dd_delta_has_spouse_features(relation_id text,
                             feature text,
                             dd_count int).

dd_new_has_spouse_features(relation_id text,
                           feature text,
                           dd_count int).

dd_new_has_spouse_features(relation_id, feature, dd_count) :-
    has_spouse_features(relation_id, feature, dd_count).

dd_new_has_spouse_features(relation_id, feature, dd_count) :-
    dd_delta_has_spouse_features(relation_id, feature, dd_count).

has_spouse?(relation_id text).

dd_delta_has_spouse?(relation_id text).

dd_new_has_spouse?(relation_id text).

dd_delta_people_mentions :- !ext_people(dd_delta_ext_people_input).

ext_people_input(sentence_id text,
                 words text[],
                 ner_tags text[],
                 dd_count int).

dd_delta_ext_people_input(sentence_id text,
                          words text[],
                          ner_tags text[],
                          dd_count int).

dd_new_ext_people_input(sentence_id text,
                        words text[],
                        ner_tags text[],
                        dd_count int).

dd_new_ext_people_input(sentence_id, words, ner_tags, dd_count) :-
    ext_people_input(sentence_id, words, ner_tags, dd_count).

dd_new_ext_people_input(sentence_id, words, ner_tags, dd_count) :-
    dd_delta_ext_people_input(sentence_id, words, ner_tags, dd_count).

dd_delta_ext_people_input(s, words, ner_tags) :-
    dd_delta_sentences(a, b, words, c, d, e, ner_tags, f, s).

function ext_people
    over like dd_delta_ext_people_input
 returns like dd_delta_people_mentions
 implementation "/Users/feiran/workspace/release/deepdive/app/spouse_datalog/udf/ext_people.py"
        handles tsv lines.

dd_delta_has_spouse_candidates :- !ext_has_spouse(dd_delta_ext_has_spouse_input).

ext_has_spouse_input(sentence_id text,
                     p1_id text,
                     p1_text text,
                     p2_id text,
                     p2_text text,
                     dd_count int).

dd_delta_ext_has_spouse_input(sentence_id text,
                              p1_id text,
                              p1_text text,
                              p2_id text,
                              p2_text text,
                              dd_count int).

dd_new_ext_has_spouse_input(sentence_id text,
                            p1_id text,
                            p1_text text,
                            p2_id text,
                            p2_text text,
                            dd_count int).

dd_new_ext_has_spouse_input(sentence_id, p1_id, p1_text, p2_id, p2_text, dd_count) :-
    ext_has_spouse_input(sentence_id, p1_id, p1_text, p2_id, p2_text, dd_count).

dd_new_ext_has_spouse_input(sentence_id, p1_id, p1_text, p2_id, p2_text, dd_count) :-
    dd_delta_ext_has_spouse_input(sentence_id, p1_id, p1_text, p2_id, p2_text, dd_count).

dd_delta_ext_has_spouse_input(s, p1_id, p1_text, p2_id, p2_text) :-
    dd_delta_people_mentions(s, a, b, p1_text, p1_id),
    people_mentions(s, c, d, p2_text, p2_id).

dd_delta_ext_has_spouse_input(s, p1_id, p1_text, p2_id, p2_text) :-
    dd_new_people_mentions(s, a, b, p1_text, p1_id),
    dd_delta_people_mentions(s, c, d, p2_text, p2_id).

function ext_has_spouse
    over like dd_delta_ext_has_spouse_input
 returns like dd_delta_has_spouse_candidates
 implementation "/Users/feiran/workspace/release/deepdive/app/spouse_datalog/udf/ext_has_spouse.py"
        handles tsv lines.

dd_delta_has_spouse_features :- !ext_has_spouse_features(dd_delta_ext_has_spouse_features_input).

ext_has_spouse_features_input(words text[],
                              relation_id text,
                              p1_start_position int,
                              p1_length int,
                              p2_start_position int,
                              p2_length int,
                              dd_count int).

dd_delta_ext_has_spouse_features_input(words text[],
                                       relation_id text,
                                       p1_start_position int,
                                       p1_length int,
                                       p2_start_position int,
                                       p2_length int,
                                       dd_count int).

dd_new_ext_has_spouse_features_input(words text[],
                                     relation_id text,
                                     p1_start_position int,
                                     p1_length int,
                                     p2_start_position int,
                                     p2_length int,
                                     dd_count int).

dd_new_ext_has_spouse_features_input(words, relation_id, p1_start_position, p1_length, p2_start_position, p2_length, dd_count) :-
    ext_has_spouse_features_input(words, relation_id, p1_start_position, p1_length, p2_start_position, p2_length, dd_count).

dd_new_ext_has_spouse_features_input(words, relation_id, p1_start_position, p1_length, p2_start_position, p2_length, dd_count) :-
    dd_delta_ext_has_spouse_features_input(words, relation_id, p1_start_position, p1_length, p2_start_position, p2_length, dd_count).

dd_delta_ext_has_spouse_features_input(words, rid, p1idx, p1len, p2idx, p2len) :-
    dd_delta_sentences(a, b, words, c, d, e, f, g, s),
    has_spouse_candidates(person1_id, person2_id, s, h, rid, x),
    people_mentions(s, p1idx, p1len, k, person1_id),
    people_mentions(s, p2idx, p2len, l, person2_id).

dd_delta_ext_has_spouse_features_input(words, rid, p1idx, p1len, p2idx, p2len) :-
    dd_new_sentences(a, b, words, c, d, e, f, g, s),
    dd_delta_has_spouse_candidates(person1_id, person2_id, s, h, rid, x),
    people_mentions(s, p1idx, p1len, k, person1_id),
    people_mentions(s, p2idx, p2len, l, person2_id).

dd_delta_ext_has_spouse_features_input(words, rid, p1idx, p1len, p2idx, p2len) :-
    dd_new_sentences(a, b, words, c, d, e, f, g, s),
    dd_new_has_spouse_candidates(person1_id, person2_id, s, h, rid, x),
    dd_delta_people_mentions(s, p1idx, p1len, k, person1_id),
    people_mentions(s, p2idx, p2len, l, person2_id).

dd_delta_ext_has_spouse_features_input(words, rid, p1idx, p1len, p2idx, p2len) :-
    dd_new_sentences(a, b, words, c, d, e, f, g, s),
    dd_new_has_spouse_candidates(person1_id, person2_id, s, h, rid, x),
    dd_new_people_mentions(s, p1idx, p1len, k, person1_id),
    dd_delta_people_mentions(s, p2idx, p2len, l, person2_id).

function ext_has_spouse_features
    over like dd_delta_ext_has_spouse_features_input
 returns like dd_delta_has_spouse_features
 implementation "/Users/feiran/workspace/release/deepdive/app/spouse_datalog/udf/ext_has_spouse_features.py"
        handles tsv lines.

dd_delta_has_spouse(rid) :-
    dd_delta_has_spouse_candidates(a, b, c, d, rid, l),
    has_spouse_features(rid, f)
  weight = f
  label = l
  rule = imply.
dd_delta_has_spouse(rid) :-
    dd_new_has_spouse_candidates(a, b, c, d, rid, l),
    dd_delta_has_spouse_features(rid, f)
  weight = f
  label = l
  rule = imply.
