# example DeepDive application for finding spouse relationships in news articles
@source
articles(
    @key
    id text,
    @searchable
    content text
    # TODO more fields if needed
).

@source
spouses_dbpedia(
    @key
    person1_name text,
    @key
    person2_name text
).

## NLP markup #################################################################
sentences( doc_id         text
         , sentence_index int
         , sentence_text  text
         , tokens         text[]
         , lemmas         text[]
         , pos_tags       text[]
         , ner_tags       text[]
         , doc_offsets    int[]
         , dep_types      text[]
         , dep_tokens     int[]
         ).

function nlp_markup over ( doc_id text, content text )
                 returns rows like sentences
  implementation "udf/nlp_markup.sh" handles tsv lines.

sentences +=
  nlp_markup(doc_id, content) :-
  articles(doc_id, content).
###############################################################################

## Candidate mapping ##########################################################
@extraction
person_mention(
    @key
    doc_id text,
    @key
    sentence_index int,
    @key
    begin_index int,
    @key
    end_index int,
    text text
).

function map_person_mention over (
        doc_id text,
        sentence_index int,
        tokens text[],
        ner_tags text[]
    )
    returns rows like person_mention
    implementation "udf/map_person_mention.py" handles tsv lines.

person_mention += map_person_mention(
    doc_id, sentence_index, tokens, ner_tags
) :- sentences(
    doc_id, sentence_index, sentence_text, tokens, lemmas, pos_tags, ner_tags, dep_types, dep_token_indexes
).
###############################################################################

# TODO
