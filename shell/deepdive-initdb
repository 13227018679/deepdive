#!/usr/bin/env bash
# deepdive-initdb -- Initializes the underlying database for the DeepDive application
# > deepdive initdb
##
set -eu

# find the current application
DEEPDIVE_APP=$(find-deepdive-app)
export DEEPDIVE_APP
cd "$DEEPDIVE_APP"

. load-db-driver.sh

# make sure database is created based on the database type
db-init "$@"

# create schema
DEEPDIVE_SCHEMA=${DEEPDIVE_SCHEMA:-}
if [ -n "$DEEPDIVE_SCHEMA" ]; then
  deepdive-sql "CREATE SCHEMA $DEEPDIVE_SCHEMA;"
fi

# make sure the necessary tables are all created
if [[ -e app.ddlog ]]; then
    # TODO export schema.sql from ddlog instead of running initdb pipeline
    deepdive-run initdb
fi
# run all DDL statements in schema.sql if available
if [[ -e schema.sql ]]; then
    db-prompt <schema.sql
fi

# load the input data
! [[ -x input/init.sh ]] || {
    # XXX set the legacy environment variables
    export APP_HOME=$DEEPDIVE_APP
    input/init.sh "$@"
}
