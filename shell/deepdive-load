#!/usr/bin/env bash
# deepdive-load -- Loads a given relation's data
# > deepdive load RELATION [SOURCE...]
# Initializes given RELATION in the database and loads data from SOURCE.
# When SOURCE is unspecified, the data is loaded from files found on path
# input/RELATION.* under the DeepDive application.
#
# This command must be run under an environment whose DEEPDIVE_DB_URL variable
# is set to a proper URL, or under a DeepDive application where the URL is set
# in the db.url file.
#
# For example:
#
# > deepdive load sentences
# creates table 'sentences' and loads data from input/sentences.tsv if there
# is one.
#
# > deepdive load sentences path/to/sentences.tsv
# creates table 'sentences' and loads data from path/to/sentences.tsv.
#
# > deepdive load sentences sentences.csv.bz2
# creates table 'sentences' and loads from a compressed CSV file.
##
set -eu

# skip detection of the data format and assume
: ${DEEPDIVE_LOAD_FORMAT:=}

[[ $# -gt 0 ]] || error "Missing RELATION to load"
Relation=$1; shift

DEEPDIVE_APP=$(find-deepdive-app)
export DEEPDIVE_APP
. load-db-driver.sh

# when no SOURCE is specified, look under input/
if [[ $# -eq 0 ]]; then
    cd "$DEEPDIVE_APP"
    initsh=input/init_"$Relation".sh
    # check if init_RELATION.sh script is available
    if [[ -x "$initsh" ]]; then
        echo "Loading $Relation via $initsh"
        exec "$initsh"
    fi
    # search under input/RELATION.*
    for Path in input/"$Relation".{tsv,csv,json-seq,sql}{,.bz2,.gz,.sh}; do
        [[ -e "$Path" ]] || continue
        break
    done
    [[ -e "$Path" ]] ||
        error "input/$Relation.*: No data source found for $Relation"
    # use the found path
    set -- "$Path"
fi

# load each path given as arguments
for path; do

# determine the format
if [[ -n "$DEEPDIVE_LOAD_FORMAT" ]]; then
    # assume a format when explicitly specified
    format=$DEEPDIVE_LOAD_FORMAT
else
    case $path in
        *.tsv|*.tsv.*)           format=tsv      ;;
        *.csv|*.csv.*)           format=csv      ;;
        *.json-seq|*.json-seq.*) format=json-seq ;;
        *.sql|*.sql.*)           format=sql      ;;
        *) error "$path: Unrecognized format, specify DEEPDIVE_LOAD_FORMAT="
    esac
fi
# and how to load it
case $format in
    sql) load() { db-execute "$(cat "$1")"; } ;;
    *)   load() { db-load "$Relation" "$format" "$1"; }
esac
# and how to decompress if needed
case $path in
    *.bz2) decompress=bzcat ;;
    *.gz)  decompress=zcat  ;;
    *.sh)  decompress=bash  ;;
    *)     decompress=
esac

# load the data
echo "Loading $Relation from $path ($format format)"
if [[ -n "$decompress" ]]; then
    # after decompressing if needed
    load <($decompress "$path")
else
    load "$path"
fi

done
